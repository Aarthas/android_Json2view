package com.arthas.yiew;

import android.content.Context;
import android.content.res.Resources;
import android.util.Log;
import android.util.TypedValue;
import android.view.ViewGroup;

import com.arthas.yiew.decode.YiewBean;

import java.util.concurrent.atomic.AtomicInteger;

/**
 * Created by Administrator on 2016/10/28.
 */

public class Utils {


    public static int dip2px(float dipValue)

    {
        float v = TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dipValue, Resources.getSystem().getDisplayMetrics());
        return (int) v;
    }


    public static ViewGroup.LayoutParams createLayoutParams(ViewGroup viewGroup, YiewBean yiew) {
        ViewGroup.LayoutParams params = null;
        if (viewGroup != null) {
            try {
                /* find parent viewGroup and create LayoutParams of that class */
                Class layoutClass = viewGroup.getClass();
                while (!classExists(layoutClass.getName() + "$LayoutParams")) {
                    layoutClass = layoutClass.getSuperclass();
                }
                String layoutParamsClassname = layoutClass.getName() + "$LayoutParams";
                Class layoutParamsClass = Class.forName(layoutParamsClassname);
                /* create the actual layoutParams object */
                params = (ViewGroup.LayoutParams) layoutParamsClass.getConstructor(Integer.TYPE, Integer.TYPE).
                        newInstance(new Object[]{Utils.getWidth(yiew), Utils.getHeight(yiew)});
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        if (params == null) {
            params = new ViewGroup.LayoutParams(Utils.getWidth(yiew), Utils.getHeight(yiew));
        }


        return params;
    }

    private static int getHeight(YiewBean yiew) {
        Log.d("syb", "getHeight=" + yiew.height);
        int meature = meature(yiew.height);
        Log.d("syb", "getHeight=" + meature);
        return meature;
    }

    private static int getWidth(YiewBean yiew) {
        Log.d("syb", "getWidth=" + yiew.width);
        int meature = meature(yiew.width);
        Log.d("syb", "getWidth=" + meature);
        return meature;
    }

    public static int meature(String meature) {
//        Log.d("syb","line"+unit);
//        Log.d("syb","view"+view);

        if (meature == null || meature.equals("")) {
            return -2;
        }

        if (meature.equals("match") || meature.equals("match_parent")) {
            return -1;
        } else if (meature.equals("wrap") || meature.equals("wrap_content")) {
            return -2;
        } else {

            return meatureWithUnit(meature);


        }

    }

    public static int meatureWithUnit(String meature) {
        try {
            if (meature== null )
            {
                return 0;
            }
            Log.d("syb", "meatureWithUnit=" + meature);
            if (meature.endsWith("dp")) {
                String substring = meature.substring(0, meature.length() - 2);
                return Utils.dip2px(Integer.valueOf(substring));
            } else if (meature.endsWith("dip")) {
                String substring = meature.substring(0, meature.length() - 3);
                return Utils.dip2px(Integer.valueOf(substring));
            } else if (meature.endsWith("px")) {
                String substring = meature.substring(0, meature.length() - 2);
                return Integer.valueOf(substring);
            } else {
                return Utils.dip2px(Integer.valueOf(meature));
            }
        } catch (Exception e) {
            return -2;
        }
    }


    public static Object getValueInt(Class clazz, String varName) {

        java.lang.reflect.Field fieldRequested = null;

        try {
            fieldRequested = clazz.getField(varName);
            if (fieldRequested != null) {
                return fieldRequested.get(clazz);
            }
        } catch (SecurityException e) {
            e.printStackTrace();
        } catch (NoSuchFieldException e) {
            e.printStackTrace();
        } catch (IllegalAccessException e) {
            e.printStackTrace();
        } catch (IllegalArgumentException e) {
            e.printStackTrace();
        }
        return null;
    }


    public static int getDrawableId(Context context, String name) {
        return context.getResources().getIdentifier(name, "drawable", context.getPackageName());
    }

    /**
     * return the id (from the R.java autogenerated class) of the string that pass its name as argument
     */
    public static int getStringId(Context context, String name) {
        return context.getResources().getIdentifier(name, "string", context.getPackageName());
    }

    /**
     * convert densityPixel to pixel
     */
    public static float dpToPx(float dp) {
        return TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_DIP, dp, Resources.getSystem().getDisplayMetrics());

    }

    /**
     * convert scalePixel to pixel
     */
    public static float spToPx(float sp) {
        return TypedValue.applyDimension(TypedValue.COMPLEX_UNIT_SP, sp, Resources.getSystem().getDisplayMetrics());
    }

    /**
     * convert pixel to densityPixel
     */
    public static float pxToDp(int px) {
        return (px / Resources.getSystem().getDisplayMetrics().density);
    }

    /**
     * convert pixel to scaledDensityPixel
     */
    public static float pxToSp(int px) {
        return (px / Resources.getSystem().getDisplayMetrics().scaledDensity);

    }

    /**
     * convert densityPixel to scaledDensityPixel
     */
    public static float dpToSp(float dp) {
        return (int) (dpToPx(dp) / Resources.getSystem().getDisplayMetrics().scaledDensity);
    }

    /**
     * return device Width
     */
    public static int deviceWidth() {
        return Resources.getSystem().getDisplayMetrics().widthPixels;
    }


    public static boolean classExists(String className) {
        try {
            Class.forName(className);
            return true;
        } catch (ClassNotFoundException ex) {
            return false;
        }
    }


    private static final AtomicInteger sNextGeneratedId = new AtomicInteger(1);

    public static int generateViewId() {
        for (; ; ) {
            final int result = sNextGeneratedId.get();
            // aapt-generated IDs have the high byte nonzero; clamp to the range under that.
            int newValue = result + 1;
            if (newValue > 0x00FFFFFF) newValue = 1; // Roll over to 1, not 0.
            if (sNextGeneratedId.compareAndSet(result, newValue)) {
                return result;
            }
        }
    }

//    public static void copy(YiewBean yiew1, YiewBean yiew) {
//
//        if (yiew.width != null) {
//            yiew1.width = yiew.width;
//        }
//        if (yiew.height != null) {
//            yiew1.height = yiew.height;
//        }
//        if (yiew.id != 0) {
//            yiew1.id = yiew.id;
//        }
//        if (yiew.click != null) {
//            yiew1.click = yiew.click;
//        }
//        if (yiew.visibility != null) {
//            yiew1.visibility = yiew.visibility;
//        }
//        if (yiew.tag != null) {
//            yiew1.tag = yiew.tag;
//        }
//        if (yiew.propertys != null) {
//            yiew1.propertys = yiew.propertys;
//        }
//        if (yiew.child != null) {
//            yiew1.child = yiew.child;
//        }
//        if (yiew.padding != null) {
//            yiew1.padding = yiew.padding;
//        }
//        if (yiew.paddingLeft != null) {
//            yiew1.paddingLeft = yiew.paddingLeft;
//        }
//        if (yiew.paddingTop != null) {
//            yiew1.paddingTop = yiew.paddingTop;
//        }
//        if (yiew.paddingRight != null) {
//            yiew1.paddingRight = yiew.paddingRight;
//        }
//        if (yiew.paddingBottom != null) {
//            yiew1.paddingBottom = yiew.paddingBottom;
//        }
//        if (yiew.margin != null) {
//            yiew1.margin = yiew.margin;
//        }
//        if (yiew.marginLeft != null) {
//            yiew1.marginLeft = yiew.marginLeft;
//        }
//        if (yiew.marginTop != null) {
//            yiew1.marginTop = yiew.marginTop;
//        }
//        if (yiew.marginRight != null) {
//            yiew1.marginRight = yiew.marginRight;
//        }
//        if (yiew.marginBottom != null) {
//            yiew1.marginBottom = yiew.marginBottom;
//        }
//        if (yiew.background != null) {
//            yiew1.background = yiew.background;
//        }
//        if (yiew.gravity != null) {
//            yiew1.gravity = yiew.gravity;
//        }
//        if (yiew.layout_gravity != null) {
//            yiew1.layout_gravity = yiew.layout_gravity;
//        }
//        if (yiew.weight != 0) {
//            yiew1.weight = yiew.weight;
//        }
//        if (yiew.text != null) {
//            yiew1.text = yiew.text;
//        }
//        if (yiew.textSize != 0) {
//            yiew1.textSize = yiew.textSize;
//        }
//        if (yiew.textColor != null) {
//            yiew1.textColor = yiew.textColor;
//        }
//        if (yiew.hint != null) {
//            yiew1.hint = yiew.hint;
//        }
//        if (yiew.maxLine != 0) {
//            yiew1.maxLine = yiew.maxLine;
//        }
//        if (yiew.hintColor != null) {
//            yiew1.hintColor = yiew.hintColor;
//        }
//        if (yiew.scaleType != null) {
//            yiew1.scaleType = yiew.scaleType;
//        }
//        if (yiew.src != null) {
//            yiew1.src = yiew.src;
//        }
//        if (yiew.layout_alignParentRight) {
//            yiew1.layout_alignParentRight = yiew.layout_alignParentRight;
//        }
//        if (yiew.layout_alignParentLeft) {
//            yiew1.layout_alignParentLeft = yiew.layout_alignParentLeft;
//        }
//        if (yiew.layout_alignParentTop) {
//            yiew1.layout_alignParentTop = yiew.layout_alignParentTop;
//        }
//        if (yiew.layout_alignParentBottom) {
//            yiew1.layout_alignParentBottom = yiew.layout_alignParentBottom;
//        }
//        if (yiew.layout_centerInParent) {
//            yiew1.layout_centerInParent = yiew.layout_centerInParent;
//        }
//        if (yiew.layout_centerHorizontal) {
//            yiew1.layout_centerHorizontal = yiew.layout_centerHorizontal;
//        }
//        if (yiew.layout_centerVertical) {
//            yiew1.layout_centerVertical = yiew.layout_centerVertical;
//        }
//        if (yiew.layout_toLeftOf != 0) {
//            yiew1.layout_toLeftOf = yiew.layout_toLeftOf;
//        }
//        if (yiew.layout_toRightOf != 0) {
//            yiew1.layout_toRightOf = yiew.layout_toRightOf;
//        }
//        if (yiew.layout_above != 0) {
//            yiew1.layout_above = yiew.layout_above;
//        }
//        if (yiew.layout_below != 0) {
//            yiew1.layout_below = yiew.layout_below;
//        }
//        if (yiew.layout_alignLeft != 0) {
//            yiew1.layout_alignLeft = yiew.layout_alignLeft;
//        }
//        if (yiew.layout_alignRight != 0) {
//            yiew1.layout_alignRight = yiew.layout_alignRight;
//        }
//        if (yiew.layout_alignTop != 0) {
//            yiew1.layout_alignTop = yiew.layout_alignTop;
//        }
//        if (yiew.layout_alignBottom != 0) {
//            yiew1.layout_alignBottom = yiew.layout_alignBottom;
//        }
//        if (yiew.layout_alignBaseline != 0) {
//            yiew1.layout_alignBaseline = yiew.layout_alignBaseline;
//        }
//    }


}
